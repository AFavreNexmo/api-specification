{
    "swagger": "2.0",
    "schemes": [
        "https"
    ],
    "basePath": "/v2",
    "host": "api.nexmo.com",
    "info": {
        "version": "2.0",
        "title": "Nexmo API",
        "description": "##OAI Specification of Nexmo's APIs."
    },
    "paths": {
        "/applications": {
            "parameters": [],
            "get": {
                "tags": [
                    "Application"
                ],
                "summary": "List Applications",
                "description": "Get details of all apps associated with an account.",
                "operationId": "GET_applications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "date_start",
                        "in": "query",
                        "description": "\nStart date range in ISO-8601 UTC format YYYY-MM-DDTHH:MM:SSZ",
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "\nOption to only return the record count. Options are ‘true’ or ‘false’. Defaults to false.",
                        "type": "boolean"
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "The number of records to limit the response to.",
                        "type": "number"
                    },
                    {
                        "name": "page_offset",
                        "in": "query",
                        "description": "Offset of the first record. ",
                        "type": "number"
                    },
                    {
                        "name": "date_end",
                        "in": "query",
                        "description": "End date range in ISO-8601 UTC format YYYY-MM-DDTHH:MM:SSZ",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "allOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "_links": {
                                            "type": "object",
                                            "properties": {
                                                "self": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "next": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "prev": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "first": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "last": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "count": {
                                            "type": "string"
                                        },
                                        "page_size": {
                                            "type": "string"
                                        },
                                        "page_offset": {
                                            "type": "string"
                                        },
                                        "_embedded": {
                                            "type": "object",
                                            "properties": {
                                                "applications": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/applicationResponse"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    "$ref": "#/definitions/common"
                                }
                            ]
                        },
                        "examples": {
                            "application/json": {
                                "_links": {
                                    "self": {
                                        "href": "/applications?page_offset=10"
                                    },
                                    "next": {
                                        "href": "/applications?page_offset=20"
                                    },
                                    "prev": {
                                        "href": "/applications"
                                    },
                                    "first": {
                                        "href": "/applications"
                                    },
                                    "last": {
                                        "href": "/applications?page_offset=50"
                                    }
                                },
                                "count": "1020",
                                "page_size": "50",
                                "page_offset": "150",
                                "_embedded": {
                                    "applications": [
                                        {
                                            "_links": {
                                                "numberpool": {
                                                    "href": "/numberpools/10"
                                                },
                                                "self": {
                                                    "href": "/applications/63f61863-4a51-4f6b-86e1-46edebcf9356"
                                                }
                                            },
                                            "name": "Nexmo-conference",
                                            "application_id": "63f61863-4a51-4f6b-86e1-46edebcf9356",
                                            "numberpool_id": "10",
                                            "answer_url": "http://myanswerurl.com",
                                            "answer_method": "GET",
                                            "backup_url": "http://mybackupurll.com",
                                            "backup_method": "GET",
                                            "event_url": "http://myeventurl.com",
                                            "event_method": "GET",
                                            "application_type": "voice"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Application"
                ],
                "summary": "Create Application",
                "description": "Create a new application.",
                "operationId": "POST_applications",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/applicationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "allOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "app_id": {
                                            "type": "string"
                                        },
                                        "private_key": {
                                            "type": "string"
                                        }
                                    }
                                },
                                {
                                    "$ref": "#/definitions/common"
                                }
                            ]
                        },
                        "examples": {
                            "application/json": {
                                "app_id": "ab3eud2",
                                "shared_secret": "63f61863-4a51-4f6b-86e1-46edebcf9356"
                            }
                        }
                    }
                }
            }
        },
        "/applications/{app_uuid}": {
            "parameters": [
                {
                    "name": "app_uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Application"
                ],
                "summary": "Get Application",
                "description": "Get details of an existing application.\n",
                "operationId": "GET_applications-app_uuid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/applicationResponse"
                                },
                                {
                                    "$ref": "#/definitions/common"
                                }
                            ]
                        },
                        "examples": {
                            "application/json": {
                                "name": "Nexmo-conference",
                                "application_id": "63f61863-4a51-4f6b-86e1-46edebcf9356",
                                "numberpool_id": "10",
                                "answer_url": "http://myanswerurl.com",
                                "answer_method": "GET",
                                "backup_url": "http://mybackupurll.com",
                                "backup_method": "GET",
                                "event_url": "http://myeventurl.com",
                                "event_method": "GET",
                                "application_type": "voice"
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Application"
                ],
                "summary": "Update Application",
                "description": "Modify an existing application (NOTE: whenever a PUT is performed, a new shared secret is created and returned).",
                "operationId": "PUT_applications-app_uuid",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/applicationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "app_id": {
                                    "type": "string"
                                },
                                "shared_secret": {
                                    "type": "string"
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "app_id": "ab3eud2",
                                "shared_secret": "63f61863-4a51-4f6b-86e1-46edebcf9356"
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Application"
                ],
                "summary": "Delete Application",
                "description": "Delete an existing application.",
                "operationId": "DELETE_applications-app_uuid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/applicationRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/common"
                        }
                    }
                }
            }
        },
        "/conferences/{conference_uuid}/participants/{participant_id}/stream": {
            "parameters": [
                {
                    "name": "conference_uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "participant_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "tags": [
                    "Conference Participant"
                ],
                "summary": "Stop Stream",
                "description": "Stop streaming an audio file to a conference participant.",
                "operationId": "DELETE_conferences-conference_uuid-participants-participant_id-stream",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/common"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Conference Participant"
                ],
                "summary": "Start Stream",
                "description": "Stream an audio file to a conference participant.\n",
                "operationId": "POST_conferences-conference_uuid-participants-participant_id-stream",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/streamRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/common"
                        }
                    }
                }
            }
        },
        "/calls": {
            "parameters": [],
            "post": {
                "tags": [
                    "Call"
                ],
                "summary": "Create Call",
                "description": "Make an outbound SIP or PSTN call",
                "operationId": "POST_calls",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/callRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "allOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "call_uuid": {
                                            "type": "string"
                                        },
                                        "start_time": {
                                            "type": "string"
                                        }
                                    }
                                },
                                {
                                    "$ref": "#/definitions/common"
                                }
                            ]
                        },
                        "examples": {
                            "application/json": {
                                "call_uuid": "63f61863-4a51-4f6b-86e1-46edebcf9356",
                                "start_time": "2015-02-04 22:45:00"
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Call"
                ],
                "summary": "List Calls",
                "description": "Get details of all calls with filters for status and pagination.",
                "operationId": "GET_calls",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter for status of call. Options are ‘in_progress’, ‘complete’, ‘all’. Defaults to ‘all’",
                        "type": "string",
                        "enum": [
                            "in_progress",
                            "complete",
                            "all"
                        ]
                    },
                    {
                        "name": "date_start",
                        "in": "query",
                        "description": "Start date range in ISO-8601 UTC format YYYY-MM-DDTHH:MM:SSZ",
                        "type": "string"
                    },
                    {
                        "name": "date_end",
                        "in": "query",
                        "description": "End date range in ISO-8601 UTC format YYYY-MM-DDTHH:MM:SSZ",
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "\nOption to only return the record count. Options are ‘true’ or ‘false’. Defaults to false",
                        "type": "boolean"
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "The number of records to limit the response to. Defaults to 10",
                        "type": "integer"
                    },
                    {
                        "name": "page_offset",
                        "in": "query",
                        "description": "Offset of the first record. Defaults to 0",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "allOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "_links": {
                                            "type": "object",
                                            "properties": {
                                                "self": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "next": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "prev": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "first": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "last": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "count": {
                                            "type": "string"
                                        },
                                        "page_size": {
                                            "type": "string"
                                        },
                                        "page_offset": {
                                            "type": "string"
                                        },
                                        "_embedded": {
                                            "type": "object",
                                            "properties": {
                                                "calls": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/callResponse"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    "$ref": "#/definitions/common"
                                }
                            ]
                        },
                        "examples": {
                            "application/json": {
                                "_links": {
                                    "self": {
                                        "href": "/calls?page_offset=10"
                                    },
                                    "next": {
                                        "href": "/calls?page_offset=20"
                                    },
                                    "prev": {
                                        "href": "/calls"
                                    },
                                    "first": {
                                        "href": "/calls"
                                    },
                                    "last": {
                                        "href": "/calls?page_offset=50"
                                    }
                                },
                                "count": "2",
                                "page_size": "10",
                                "page_offset": "10",
                                "_embedded": {
                                    "calls": [
                                        {
                                            "_links": {
                                                "self": {
                                                    "href": "/calls/63f61863-4a51-4f6b-86e1-46edebcf9356"
                                                }
                                            },
                                            "call_uuid": "63f61863-4a51-4f6b-86e1-46edebcf9356",
                                            "to": "447833726118",
                                            "from": "27312076887",
                                            "call_status": "in_progress",
                                            "rate": "0.39",
                                            "price": "",
                                            "duration": "",
                                            "start_time": "2015-02-04 22:45:00",
                                            "end_time": "",
                                            "network": "65512"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calls/{call_uuid}": {
            "parameters": [
                {
                    "name": "call_uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "tags": [
                    "Call"
                ],
                "summary": "Hangup Call",
                "description": "Hang up a current live call.",
                "operationId": "DELETE_calls-call_uuid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/common"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Call"
                ],
                "summary": "Get Call",
                "description": "Get details of a specific call.",
                "operationId": "GET_calls-call_uuid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/callResponse"
                                },
                                {
                                    "$ref": "#/definitions/common"
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Call"
                ],
                "summary": "Modify Call",
                "description": "",
                "operationId": "PUT_calls-call_uuid",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "leg": {
                                    "type": "string",
                                    "default": "both",
                                    "description": "Leg of the call to perform the action on. Options are ‘a_leg’, ‘b_leg’ or ‘both’. Defaults to ‘both’",
                                    "enum": [
                                        "a_leg",
                                        "b_leg",
                                        "both"
                                    ]
                                },
                                "transfer_url": {
                                    "type": "string",
                                    "description": "\nURL that gets called by transferred leg or call. Should return a Nexmo Call Control Object\n"
                                },
                                "transfer_method": {
                                    "type": "string",
                                    "default": "POST",
                                    "description": "HTTP method used to make the request. Defaults to POST"
                                },
                                "orphan_action": {
                                    "type": "string",
                                    "default": "hangup",
                                    "description": "What to do with orphan legs if ‘leg’ is not ‘both’. Options are ‘transfer’ or ‘hangup’. Defaults to ‘hangup’",
                                    "enum": [
                                        "transfer",
                                        "hangup"
                                    ]
                                },
                                "orphan_url": {
                                    "type": "string",
                                    "description": "URL that gets called if orphan_action is ‘transfer’"
                                },
                                "orphan_method": {
                                    "type": "string",
                                    "default": "POST",
                                    "description": "HTTP method that is used to make the request. Defaults to POST"
                                }
                            },
                            "required": [
                                "transfer_url"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "allOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "call_uuid": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                {
                                    "$ref": "#/definitions/common"
                                }
                            ]
                        },
                        "examples": {
                            "application/json": {
                                "call_uuid": [
                                    "20f61863-4a51-ef6b-86e1-w6edebcf9356",
                                    "63f61863-wa51-4f6b-86e1-46edebcf9356"
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/calls/{call_uuid}/recordings": {
            "parameters": [
                {
                    "name": "call_uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "post": {
                "tags": [
                    "Recording"
                ],
                "summary": "Create Recording",
                "description": "Start recording a call that is in progress and return parameters to `event_url` when the call ends.\n\nURLS returning audio files support the following mime types:\n- audio/wav\n- audio/mpeg\n- audio/ogg\n",
                "operationId": "POST_calls-call_uuid-recordings",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/recordingRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/common"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "recording_uuid": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        },
                        "examples": {
                            "application/json": {
                                "recording_uuid": "20f61863-4a51-ef6b-86e1-w6edebcf9356"
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Recording"
                ],
                "summary": "Stop Recording",
                "description": "Stop recording a call and return parameters to `event_url`.",
                "operationId": "DELETE_calls-callId-recordings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/recordingResponse"
                        }
                    }
                }
            }
        },
        "/calls/recordings/{recording_uuid}": {
            "parameters": [
                {
                    "name": "recording_uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Recording"
                ],
                "summary": "Get Recording",
                "description": "Get details of a specific recording currently hosted by Nexmo.",
                "operationId": "GET_calls-recordings-recording_uuid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/recordingResponse"
                                },
                                {
                                    "$ref": "#/definitions/common"
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/calls/recordings": {
            "parameters": [],
            "get": {
                "tags": [
                    "Recording"
                ],
                "summary": "List Recordings",
                "description": "Get all recordings hosted by Nexmo.",
                "operationId": "GET_calls-recordings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "description": "Option to only return the record count. Options are ‘true’ or ‘false’. Defaults to false.",
                        "type": "boolean"
                    },
                    {
                        "name": "date_start",
                        "in": "query",
                        "description": "Start date range in ISO-8601 UTC format YYYY-MM-DDTHH:MM:SSZ",
                        "type": "string"
                    },
                    {
                        "name": "date_end",
                        "in": "query",
                        "description": "End date range in ISO-8601 UTC format YYYY-MM-DDTHH:MM:SSZ",
                        "type": "string"
                    },
                    {
                        "name": "call_uuid",
                        "in": "query",
                        "description": "Filter based on a specific call uuid",
                        "type": "string"
                    },
                    {
                        "name": " page_size",
                        "in": "query",
                        "description": "The number of records to limit the response to. Defaults to 10",
                        "type": "integer"
                    },
                    {
                        "name": "page_offset",
                        "in": "query",
                        "description": "Offset of the first record. Defaults to 0",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "allOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "_links": {
                                            "type": "object",
                                            "properties": {
                                                "self": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "next": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "prev": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "first": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "last": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "count": {
                                            "type": "string"
                                        },
                                        "total": {
                                            "type": "string"
                                        },
                                        "page": {
                                            "type": "string"
                                        },
                                        "size": {
                                            "type": "string"
                                        },
                                        "_embedded": {
                                            "type": "object",
                                            "properties": {
                                                "recordings": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/recordingResponse"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    "$ref": "#/definitions/common"
                                }
                            ]
                        },
                        "examples": {
                            "application/json": {
                                "_links": {
                                    "self": {
                                        "href": "/recordings?page_offset=10"
                                    },
                                    "next": {
                                        "href": "/recordings?page_offset=20"
                                    },
                                    "prev": {
                                        "href": "/recordings"
                                    },
                                    "first": {
                                        "href": "/recordings"
                                    },
                                    "last": {
                                        "href": "/recordings?page_offset=190"
                                    }
                                },
                                "count": "10",
                                "total": "193",
                                "page": "2",
                                "size": "10",
                                "_embedded": {
                                    "recordings": [
                                        {
                                            "_links": {
                                                "self": {
                                                    "href": "/recordings/63f61863-4a51-4f6b-86e1-46edebcf9356"
                                                },
                                                "call": {
                                                    "href": "/calls/ssf61863-4a51-ef6b-11e1-w6edebcf93bb"
                                                }
                                            },
                                            "recording_url": "https://media.nexmo/a3euw8A/20f61863-4a51-ef6b-86e1-w6edebcf9356.mp3",
                                            "call_uuid": "ssf61863-4a51-ef6b-11e1-w6edebcf93bb",
                                            "recording_time": "2015-02-04 22:45:00",
                                            "duration": "1301"
                                        },
                                        {
                                            "_links": {
                                                "self": {
                                                    "href": "/recordings/63f61863-4a51-4f6b-86e1-46edebcf9356"
                                                },
                                                "call": {
                                                    "href": "/calls/ssf61863-4a51-ef6b-11e1-w6edebcf93bb"
                                                }
                                            },
                                            "recording_url": "https://media.nexmo/a3euw8A/20f61863-4a51-ef6b-86e1-w6edebcf9356.mp3",
                                            "call_uuid": "ssf61863-4a51-ef6b-11e1-w6edebcf93bb",
                                            "recording_time": "2015-02-04 22:45:00",
                                            "duration": "1301"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calls/{call_uuid}/stream": {
            "parameters": [
                {
                    "name": "call_uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "post": {
                "tags": [
                    "Stream"
                ],
                "summary": "Start Stream",
                "description": "Start streaming an audio file to a live call or call leg. Supported formats are mp3, wav and ogg.",
                "operationId": "POST_calls-call_uuid-stream",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/common"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Stream"
                ],
                "summary": "Stop Stream",
                "description": "Stop streaming an audio file to a live call or call leg.",
                "operationId": "DELETE_calls-call_uuid-stream",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "stream_url": {
                                    "type": "string",
                                    "description": "A comma separated list of audio URLs to stream. "
                                },
                                "level": {
                                    "type": "number",
                                    "default": 0,
                                    "description": "Set the audio level of the stream. -1>=level=<1. Defaults to 0. Resolution is 0.1",
                                    "minimum": 1,
                                    "maximum": -1,
                                    "multipleOf": 0.1
                                },
                                "loop": {
                                    "type": "integer",
                                    "default": 1,
                                    "description": "Whether to loop the stream once the stream ends. Options are an integer 0>=loop<10 where 0 loops continously. Defaults to 1. ",
                                    "minimum": 0,
                                    "maximum": 10
                                },
                                "leg": {
                                    "type": "string",
                                    "default": "both",
                                    "description": "Which part of the call to stream the audio file to. Options are ‘a_leg’, ‘b_leg’ or ‘both’. Defaults to ‘both’",
                                    "enum": [
                                        "a_leg",
                                        "b_leg",
                                        "both"
                                    ]
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/common"
                        }
                    }
                }
            }
        },
        "/calls/{call_uuid}/talk": {
            "parameters": [
                {
                    "name": "call_uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "post": {
                "tags": [
                    "Text to Speech"
                ],
                "summary": "Start Text to Speech",
                "description": "Start text to speech to a live call or call leg.",
                "operationId": "POST_calls-call_uuid-talk",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/common"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Text to Speech"
                ],
                "summary": "Stop Text to Speech",
                "description": "Stop text to speech to a live call or call leg.",
                "operationId": "DELETE_calls-call_uuid-talk",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "loop": {
                                    "type": [
                                        "integer",
                                        "boolean"
                                    ],
                                    "default": false,
                                    "description": "Whether to loop the once the TTS ends. Options are an integer 0>=loop<10 where 0 loops infinity or ‘false’. Defaults to ‘false’",
                                    "minimum": 0,
                                    "maximum": 10
                                },
                                "leg": {
                                    "type": "string",
                                    "default": "both",
                                    "description": "Which part of the call to send TTS. Options are ‘a_leg’, ‘b_leg’ or ‘both’. Defaults to ‘both’",
                                    "enum": [
                                        "a_leg",
                                        "b_leg",
                                        "both"
                                    ]
                                },
                                "text": {
                                    "type": "string",
                                    "description": "\nBody of the text message. 0>text<1500. Commas control pauses in speech.",
                                    "minLength": 0,
                                    "maxLength": 1500
                                },
                                "level": {
                                    "type": "number",
                                    "description": "Set the audio level of the TTS. -1>=level=<1. Defaults to 0",
                                    "minimum": -1,
                                    "maximum": 1,
                                    "multipleOf": 0.1
                                },
                                "gender": {
                                    "type": "string",
                                    "default": "female",
                                    "description": "The gender to use for TTS. Options are ‘male’ or ‘female’. Defaults to female",
                                    "enum": [
                                        "male",
                                        "female"
                                    ]
                                },
                                "language": {
                                    "type": "string",
                                    "default": "en-gb",
                                    "description": "The language used to read the message. Defaults to \"en-gb\"  "
                                }
                            },
                            "required": [
                                "text"
                            ]
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/common"
                        }
                    }
                }
            }
        },
        "/conferences": {
            "parameters": [],
            "get": {
                "tags": [
                    "Conference"
                ],
                "summary": "List Conferences",
                "description": "Get a list of all the currently active conferences with pagination information.",
                "operationId": "GET_conferences",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter for status of call. Options are ‘in_progress’, ‘complete’, ‘all’. Defaults to ‘all’",
                        "type": "string",
                        "enum": [
                            "in_progress",
                            "complete",
                            "all"
                        ]
                    },
                    {
                        "name": "date_start",
                        "in": "query",
                        "description": "Start date range in ISO-8601 UTC format YYYY-MM-DDTHH:MM:SSZ",
                        "type": "string"
                    },
                    {
                        "name": "date_end",
                        "in": "query",
                        "description": "End date range in ISO-8601 UTC format YYYY-MM-DDTHH:MM:SSZ",
                        "type": "string"
                    },
                    {
                        "name": "count",
                        "in": "query",
                        "description": "\nOption to only return the record count. Options are ‘true’ or ‘false’. Defaults to false",
                        "type": "boolean"
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "The number of records to limit the response to. Defaults to 10",
                        "type": "integer"
                    },
                    {
                        "name": "page_offset",
                        "in": "query",
                        "description": "Offset of the first record. Defaults to 0",
                        "type": "integer"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter for name conf name. Takes partial match with wildcard e.g. *mo, nex* etc.",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "allOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "_links": {
                                            "type": "object",
                                            "properties": {
                                                "self": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "next": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "prev": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "first": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "last": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "count": {
                                            "type": "string"
                                        },
                                        "page_size": {
                                            "type": "string"
                                        },
                                        "page_offset": {
                                            "type": "string"
                                        },
                                        "_embedded": {
                                            "type": "object",
                                            "properties": {
                                                "conferences": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/conferenceResponse"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    "$ref": "#/definitions/common"
                                }
                            ]
                        },
                        "examples": {
                            "application/json": {
                                "_links": {
                                    "self": {
                                        "href": "/conferences?page_offset=10"
                                    },
                                    "next": {
                                        "href": "/conferences?page_offset=20"
                                    },
                                    "prev": {
                                        "href": "/conferences"
                                    },
                                    "first": {
                                        "href": "/conferences"
                                    },
                                    "last": {
                                        "href": "/conferences?page=1"
                                    }
                                },
                                "count": "2",
                                "page_size": "50",
                                "page_offset": "0",
                                "_embedded": {
                                    "conferences": [
                                        {
                                            "_links": {
                                                "self": {
                                                    "href": "/conferences/13f61863-4a51-4f6b-86e1-46edebcf9356"
                                                },
                                                "participants": [
                                                    {
                                                        "href": "/participants/63f61863-4a51-4f6b-86e1-46edebcf9356"
                                                    },
                                                    {
                                                        "href": "/participants/63f61863-4a51-4f6b-23e1-46edebcf9352"
                                                    },
                                                    {
                                                        "href": "/participants/43f61863-4a51-4f6b-12e1-46edebcf9312"
                                                    },
                                                    {
                                                        "href": "/participants/23f61863-4a51-4f6b-82e1-46edebcf9323"
                                                    },
                                                    {
                                                        "href": "/participants/43f61863-4a51-4f6b-4e1-46edebcf93545"
                                                    }
                                                ]
                                            },
                                            "conference_uuid": "13f61863-4a51-4f6b-86e1-46edebcf9356",
                                            "status": "in_progress",
                                            "start_time": "2015-02-04T22:45:00Z",
                                            "end_time": "",
                                            "participants_count": "5"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/conferences/{conference_uuid}": {
            "parameters": [
                {
                    "name": "conference_uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Conference"
                ],
                "summary": "Get Conference",
                "description": "Returns the details of an existing conference.",
                "operationId": "GET_conferences-conference_uuid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/conferenceResponse"
                                },
                                {
                                    "$ref": "#/definitions/common"
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Conference"
                ],
                "summary": "End Conference",
                "description": "Ends an existing conference.",
                "operationId": "DELETE_conferences-conference_uuid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/common"
                        }
                    }
                }
            }
        },
        "/conferences/{conference_uuid}/recordings": {
            "parameters": [
                {
                    "name": "conference_uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "post": {
                "tags": [
                    "Conference"
                ],
                "summary": "Create Recording",
                "description": "Start recording an existing conference.",
                "operationId": "POST_conferences-conference_uuid-recordings",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/recordingBase"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "",
                        "schema": {
                            "allOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "recording_uuid": {
                                            "type": "string"
                                        }
                                    }
                                },
                                {
                                    "$ref": "#/definitions/common"
                                }
                            ]
                        },
                        "examples": {
                            "application/json": {
                                "recording_uuid": "20f61863-4a51-ef6b-86e1-w6edebcf9356"
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Conference"
                ],
                "summary": "Stop Recording",
                "description": "Stop recording a call and return parameters to `event_url`.",
                "operationId": "DELETE_conferences-conference_uuid-recordings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/common"
                        }
                    }
                }
            }
        },
        "/conferences/{conference_uuid}/participants/{participant_id}": {
            "parameters": [
                {
                    "name": "conference_uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "participant_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Participant"
                ],
                "summary": "Get Participant",
                "description": "Returns the details of an existing participant in an existing conference.",
                "operationId": "GET_conferences-conference_uuid-participants-participant_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/participantResponse"
                                },
                                {
                                    "$ref": "#/definitions/common"
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Participant"
                ],
                "summary": "Remove Participant",
                "description": "Remove a participant from the conference.",
                "operationId": "DELETE_conferences-conference_uuid-participants-participant_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/common"
                        }
                    }
                }
            }
        },
        "/conferences/{conference_uuid}/participants": {
            "parameters": [
                {
                    "name": "conference_uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Participant"
                ],
                "summary": "Get Participants",
                "description": "Returns all participants in an existing conference.",
                "operationId": "GET_conferences-conference_uuid-participants",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "allOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "_links": {
                                            "type": "object",
                                            "properties": {
                                                "self": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "next": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "prev": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "first": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "last": {
                                                    "type": "object",
                                                    "properties": {
                                                        "href": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "count": {
                                            "type": "string"
                                        },
                                        "page_size": {
                                            "type": "string"
                                        },
                                        "page_offset": {
                                            "type": "string"
                                        },
                                        "_embedded": {
                                            "type": "object",
                                            "properties": {
                                                "participants": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/definitions/participantResponse"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    "$ref": "#/definitions/common"
                                }
                            ]
                        },
                        "examples": {
                            "application/json": {
                                "_links": {
                                    "self": {
                                        "href": "/conferences?page=1"
                                    },
                                    "next": {
                                        "href": "/conferences?page=1"
                                    },
                                    "prev": {
                                        "href": "/conferences?page=1"
                                    },
                                    "first": {
                                        "href": "/conferences"
                                    },
                                    "last": {
                                        "href": "/conferences?page=1"
                                    }
                                },
                                "count": "2",
                                "page_size": "50",
                                "page_offset": "0",
                                "_embedded": {
                                    "participants": [
                                        {
                                            "_links": {
                                                "call": {
                                                    "href": "/calls/63f61863-4a51-4f6b-86e1-46edebcf9356"
                                                },
                                                "self": {
                                                    "href": "/conferences/13f61863-4a51-4f6b-86e1-46edebcf9356/participants/1"
                                                }
                                            },
                                            "call_uuid": "63f61863-4a51-4f6b-86e1-46edebcf9356",
                                            "to": "447833726118",
                                            "from": "27312076887",
                                            "call_status": "in-progress",
                                            "vol": "0",
                                            "mute": "false",
                                            "earmuff": "false",
                                            "rate": "0.39",
                                            "price": "",
                                            "duration": "",
                                            "start_time": "2015-02-04T22:45:00Z",
                                            "end_time": "",
                                            "network": "65512"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/conferences/{conference_uuid}/talk": {
            "parameters": [
                {
                    "name": "conference_uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "post": {
                "tags": [
                    "Conference"
                ],
                "summary": "Start Text to Speech",
                "description": "Play Text To Speech into a conference.",
                "operationId": "POST_conferences-conference_uuid-talk",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ttsRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/common"
                        }
                    }
                }
            }
        },
        "/conferences/{conference_uuid}/participants/{participant_id}/talk": {
            "parameters": [
                {
                    "name": "conference_uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "participant_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "post": {
                "tags": [
                    "Participant"
                ],
                "summary": "Start Text to Speech",
                "description": "Play TTS to a single conference participant only.",
                "operationId": "POST_conferences-conference_uuid-participants-participant_id-talk",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ttsRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/common"
                        }
                    }
                }
            }
        },
        "/conferences/{conference_uuid}/stream": {
            "parameters": [
                {
                    "name": "conference_uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "post": {
                "tags": [
                    "Conference"
                ],
                "summary": "Start Stream",
                "description": "Stream an audio file to a conference.",
                "operationId": "POST_conferences-conference_uuid-stream",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/streamRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/common"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Conference"
                ],
                "summary": "Stop Stream",
                "description": "Stop streaming an audio file to a conference.",
                "operationId": "DELETE_conferences-conference_uuid-stream",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "stream_url": {
                                    "type": "string",
                                    "description": "A comma separated list of audio URLs to stream. "
                                },
                                "level": {
                                    "type": "number",
                                    "default": 0,
                                    "description": "Set the audio level of the stream. -1>=level=<1. Defaults to 0. Resolution is 0.1",
                                    "minimum": 1,
                                    "maximum": -1,
                                    "multipleOf": 0.1
                                },
                                "loop": {
                                    "type": "integer",
                                    "default": 1,
                                    "description": "Whether to loop the stream once the stream ends. Options are an integer 0>=loop<10 where 0 loops continuously. Defaults to 1. ",
                                    "minimum": 0,
                                    "maximum": 10
                                },
                                "leg": {
                                    "type": "string",
                                    "default": "both",
                                    "description": "Which part of the call to stream the audio file to. Options are ‘a_leg’, ‘b_leg’ or ‘both’. Defaults to ‘both’",
                                    "enum": [
                                        "a_leg",
                                        "b_leg",
                                        "both"
                                    ]
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/common"
                        }
                    }
                }
            }
        },
        "/conference/{conference_uuid}/whisper": {
            "parameters": [
                {
                    "name": "conference_uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "post": {
                "tags": [
                    "Whisper"
                ],
                "summary": "Create Whisper",
                "description": "Allow two or more conference participants to speak off the record directly without other conference participants hearing them by creating a sub-conference. Whispers accept all conference API call’s. The `conference_uuid` returned is a child of the parent conference.",
                "operationId": "POST_conference-conference_uuid-whisper",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "participants": {
                                    "type": "string",
                                    "description": "An array of ‘call_uuid’’s to join a whisper."
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/whisperResponse"
                                },
                                {
                                    "$ref": "#/definitions/common"
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Whisper"
                ],
                "summary": "Update Whisper",
                "description": "Modify those participants in the the whisper subconference. Those excluded are returned to the parent conference.",
                "operationId": "PUT_conference-conference_uuid-whisper",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "participants": {
                                    "type": "string",
                                    "description": "New array of ‘call_uuid’ to modify the whisper"
                                },
                                "conference_uuid": {
                                    "type": "string",
                                    "description": "ID of whisper sub-conference"
                                }
                            },
                            "required": [
                                "participants",
                                "conference_uuid"
                            ]
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/whisperResponse"
                                },
                                {
                                    "$ref": "#/definitions/common"
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Whisper"
                ],
                "summary": "End Whisper",
                "description": "Returns participants of a whisper back to the parent conference.",
                "operationId": "DELETE_conference-conference_uuid-whisper",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "conference_uuid": {
                                    "type": "string",
                                    "description": "ID of whisper sub-conference"
                                }
                            },
                            "required": [
                                "conference_uuid"
                            ]
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/common"
                        }
                    }
                }
            }
        },
        "/calls/{call_uuid}/dtmf": {
            "parameters": [
                {
                    "name": "call_uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "post": {
                "tags": [
                    "DTMF"
                ],
                "summary": "Send DTMF",
                "description": "Send DTMF to a live call or leg.",
                "operationId": "POST_calls-call_uuid-dtmf",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "leg": {
                                    "type": "string",
                                    "default": "both",
                                    "description": "Which part of the call to send TTS. Options are ‘a_leg’, ‘b_leg’ or ‘both’. Defaults to ‘both’",
                                    "enum": [
                                        "a_leg",
                                        "b_leg",
                                        "both"
                                    ]
                                },
                                "digits": {
                                    "type": "string",
                                    "description": "Comma separated list of digits to send.",
                                    "minLength": 0,
                                    "maxLength": 1500
                                },
                                "method": {
                                    "type": "string",
                                    "default": "out",
                                    "description": "Whether to send DTMF inband or RFC2833. Options are ‘in’ for inband or ‘out’ for out of band. Defaults to ‘out’. ",
                                    "enum": [
                                        "in",
                                        "out"
                                    ]
                                }
                            },
                            "required": [
                                "digits"
                            ]
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/common"
                        }
                    }
                }
            }
        },
        "/conferences/{conference_uuid}/participants/{participant_id}/controls": {
            "parameters": [
                {
                    "name": "conference_uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "participant_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "put": {
                "tags": [
                    "Participant"
                ],
                "summary": "Control Participant",
                "description": "Perform RPC style actions on conference participants.",
                "operationId": "PUT_conferences-conference_uuid-participants-participant_id-controls",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "action": {
                                    "type": "string",
                                    "description": "The action to performed on a participant. Options are:\n‘vol_up’ – Increase volume of participant\n‘vol_down’ – Decrease volume of participant\n‘mute’ – Mute participant\n‘unmute’ – Unmute participant\n‘earmuff_on’ – Prevent participant hearing conference\n‘earmuff_off’ – Allow participant to hear conference again",
                                    "enum": [
                                        "vol_up",
                                        "vol_down",
                                        "mute",
                                        "unmute",
                                        "earmuff_on",
                                        "earmuff_off"
                                    ]
                                }
                            },
                            "required": [
                                "action"
                            ]
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/common"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "error": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "instance": {
                    "type": "string"
                }
            },
            "example": {
                "type": "https://docs.nexmo.com/Error#out-of-credit",
                "detail": "The request cost exceeds your current ballance.",
                "title": "Out Of Credit",
                "status": "403",
                "instance": "https://api.nexmo.com/calls/63f61863-4a51-4f6b-86e1-46edebcf9356"
            }
        },
        "applicationResponse": {
            "allOf": [
                {
                    "$ref": "#/definitions/applicationRequest"
                },
                {
                    "type": "object",
                    "properties": {
                        "application_id": {
                            "type": "string"
                        },
                        "_links": {
                            "type": "object",
                            "properties": {
                                "numberpool": {
                                    "type": "object",
                                    "properties": {
                                        "href": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "self": {
                                    "type": "object",
                                    "properties": {
                                        "href": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            ],
            "example": {
                "_links": {
                    "numberpool": {
                        "href": "/numberpools/10"
                    },
                    "self": {
                        "href": "/applications/63f61863-4a51-4f6b-86e1-46edebcf9356"
                    }
                },
                "name": "Nexmo-conference",
                "application_id": "63f61863-4a51-4f6b-86e1-46edebcf9356",
                "numberpool_id": "10",
                "answer_url": "http://myanswerurl.com",
                "answer_method": "GET",
                "backup_url": "http://mybackupurll.com",
                "backup_method": "GET",
                "event_url": "http://myeventurl.com",
                "event_method": "GET",
                "application_type": "voice"
            }
        },
        "callBase": {
            "type": "object",
            "description": "Destination of the call.",
            "properties": {
                "to": {
                    "type": "string"
                },
                "from": {
                    "type": "string",
                    "description": "An e.164 formatted number or a SIP URI."
                }
            },
            "required": [
                "to",
                "from"
            ]
        },
        "callRequest": {
            "type": "object",
            "properties": {
                "to": {
                    "type": "string",
                    "description": "Array of destinations in either e.164 format or a SIP URI. Multiple destinations (max 10). E.164 and SIP URI’s can be mixed and matched."
                },
                "from": {
                    "type": "string",
                    "description": "An e.164 formatted number or a SIP URI."
                },
                "answer_url": {
                    "type": "string",
                    "description": "URL that gets called once a call is answered. The URL returns a NCCO"
                },
                "answer_method": {
                    "type": "string",
                    "default": "POST",
                    "description": "HTTP method that is used to make the request. Defaults to POST"
                },
                "machine_detection": {
                    "type": "string",
                    "description": "How to behave if an answering machine is encountered. Options are ‘continue’ or ‘hangup’. If continue, event_url is called with param MACHINE.  "
                },
                "machine_timeout": {
                    "type": "integer",
                    "default": 5,
                    "description": "Machine detection analysis timeout in seconds. 2000>timeout<10000. Defaults to 5s"
                },
                "event_url": {
                    "type": "string",
                    "description": "Asynchronous webhook that gets called each time one of the following call events are fired. The call states are:  ‘started’, ‘ringing’, answered,’busy’, ‘failed’, ‘timeout’, ‘cancelled’, ‘machine’, ‘complete’  "
                },
                "event_method": {
                    "type": "string",
                    "default": "POST",
                    "description": "HTTP method that is used to make the request. Defaults to POST"
                },
                "backup_url": {
                    "type": "string",
                    "description": "Backup event URL in case primary is unavailable"
                },
                "backup_method": {
                    "type": "string",
                    "default": "POST",
                    "description": "HTTP method that is used to make the request. Defaults to POST"
                },
                "dtmf_answer": {
                    "type": "string",
                    "description": "Digits that are sent as soon as the call is answered (pauses are created using ‘p’ = 500ms & ‘*’, ‘#’ are respected)"
                },
                "length_timer": {
                    "type": "integer",
                    "description": "Timer in seconds that starts after a call moves to the ‘in_progress’ state. Call is dropped when it reaches 0. 0>=length_timer\n"
                },
                "ringing_timer": {
                    "type": "integer",
                    "description": "Timer in seconds that starts after a call moves to the ‘ringing’ state. Call is dropped when it reaches 0. 0>=ringing_timer. Default is 60\n"
                },
                " sip_username": {
                    "type": "string",
                    "description": "SIP username for authentication"
                },
                "sip_password": {
                    "type": "string",
                    "description": "SIP password for authentication"
                },
                "sip_headers": {
                    "type": "array",
                    "description": "Array of custom SIP headers to send in all SIP requests. Prefixed with ‘NX-’",
                    "items": {}
                }
            },
            "required": [
                "to",
                "from",
                "answer_url",
                "event_url"
            ]
        },
        "callResponse": {
            "type": "object",
            "properties": {
                "_links": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "call_uuid": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "call_status": {
                    "type": "string"
                },
                "rate": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                }
            },
            "example": {
                "_links": {
                    "self": {
                        "href": "/calls/63f61863-4a51-4f6b-86e1-46edebcf9356"
                    }
                },
                "call_uuid": "63f61863-4a51-4f6b-86e1-46edebcf9356",
                "to": "447833726118",
                "from": "27312076887",
                "call_status": "in_progress",
                "rate": "0.39",
                "price": "",
                "duration": "",
                "start_time": "2015-02-04 22:45:00",
                "end_time": "",
                "network": "65512"
            }
        },
        "recordingRequest": {
            "type": "object",
            "properties": {
                "split": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether to split the recording into two separate recordings per leg (prefixed with ‘a_’ or ‘b_’. Options are ‘true’ or ‘false’. Defaults to ‘false’"
                },
                "format": {
                    "type": "string",
                    "default": "mp3",
                    "description": "Format of the file. Options are ‘mp3’, ‘wav’ or ‘vorbis’. Defaults to ‘mp3’",
                    "enum": [
                        "mp3",
                        "wav",
                        "vorbis"
                    ]
                },
                "destination_url": {
                    "type": "string",
                    "description": "Optional URL to record the recording to if it is not hosted by Nexmo. If omitted, the recording is hosted by Nexmo "
                },
                "streamed": {
                    "type": "boolean",
                    "default": false,
                    "description": "If destination_url is specified, whether to stream the recording immediately or uploaded via a multipart form submission once the recording has finished. Options are ‘true’ or ‘false’. Defaults to ‘false’ (only valid if split is ‘false’)"
                },
                "validity_time": {
                    "type": "integer",
                    "description": "Time in minutes that the recording is valid for until it is deleted if hosted by Nexmo. 1>validity_time. Default is indefinite "
                },
                "event_url": {
                    "type": "string",
                    "default": "Asynchronous webook that gets called following a recording that returns the URL of the recording and other meta data"
                },
                "event_method": {
                    "type": "string",
                    "default": "POST",
                    "description": "HTTP method that is used to make the request. Defaults to POST"
                },
                "backup_url": {
                    "type": "string",
                    "description": "Backup callback URL in case primary is unavailable"
                },
                "backup_method": {
                    "type": "string",
                    "default": "POST",
                    "description": "HTTP method that is used to make the request. Defaults to POST"
                },
                "beep_start": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether to beep when the recording starts. Options are ‘true’ or ‘false’. Defaults to false"
                },
                "beep_finish": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether to beep when the recording finishes. Options are ‘true’ or ‘false’. Defaults to false"
                },
                "public": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether to require credentials to access the file or public. Options are ‘true’ or ‘false’. Defaults to ‘false’"
                }
            },
            "required": [
                "event_url"
            ]
        },
        "recordingResponse": {
            "type": "object",
            "properties": {
                "_links": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "call": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "recording_url": {
                    "type": "string"
                },
                "call_uuid": {
                    "type": "string"
                },
                "recording_time": {
                    "type": "string"
                },
                "duration": {
                    "type": "string",
                    "description": "Duration in seconds."
                }
            },
            "example": {
                "_links": {
                    "self": {
                        "href": "/recordings/63f61863-4a51-4f6b-86e1-46edebcf9356"
                    },
                    "call": {
                        "href": "/calls/ssf61863-4a51-ef6b-11e1-w6edebcf93bb"
                    }
                },
                "recording_url": "https://media.nexmo/a3euw8A/20f61863-4a51-ef6b-86e1-w6edebcf9356.mp3",
                "call_uuid": "ssf61863-4a51-ef6b-11e1-w6edebcf93bb",
                "recording_time": "2015-02-04 22:45:00",
                "duration": "1301"
            }
        },
        "conferenceResponse": {
            "type": "object",
            "properties": {
                "_links": {
                    "type": "object",
                    "properties": {
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "participants": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "href": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "conference_uuid": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "participants_count": {
                    "type": "string"
                }
            },
            "example": {
                "_links": {
                    "self": {
                        "href": "/conferences/13f61863-4a51-4f6b-86e1-46edebcf9356"
                    },
                    "participants": [
                        {
                            "href": "/participants/63f61863-4a51-4f6b-86e1-46edebcf9356"
                        },
                        {
                            "href": "/participants/63f61863-4a51-4f6b-23e1-46edebcf9352"
                        },
                        {
                            "href": "/participants/43f61863-4a51-4f6b-12e1-46edebcf9312"
                        },
                        {
                            "href": "/participants/23f61863-4a51-4f6b-82e1-46edebcf9323"
                        },
                        {
                            "href": "/participants/43f61863-4a51-4f6b-4e1-46edebcf93545"
                        }
                    ]
                },
                "conference_uuid": "13f61863-4a51-4f6b-86e1-46edebcf9356",
                "status": "in_progress",
                "start_time": "2015-02-04T22:45:00Z",
                "end_time": "",
                "participants_count": "5"
            }
        },
        "recordingBase": {
            "type": "object",
            "properties": {
                "format": {
                    "type": "string",
                    "default": "mp3",
                    "description": "Format of the file. Options are ‘mp3’, ‘wav’ or ‘vorbis’. Defaults to ‘mp3’",
                    "enum": [
                        "mp3",
                        "wav",
                        "vorbis"
                    ]
                },
                "destination_url": {
                    "type": "string",
                    "description": "Optional URL to record the recording to if it is not hosted by Nexmo. If omitted, the recording is hosted by Nexmo "
                },
                "streamed": {
                    "type": "boolean",
                    "default": false,
                    "description": "If destination_url is specified, whether to stream the recording immediately or uploaded via a multipart form submission once the recording has finished. Options are ‘true’ or ‘false’. Defaults to ‘false’ (only valid if split is ‘false’)"
                },
                "validity_time": {
                    "type": "integer",
                    "description": "Time in minutes that the recording is valid for until it is deleted if hosted by Nexmo. 1>validity_time. Default is indefinite "
                },
                "event_url": {
                    "type": "string",
                    "default": "Asynchronous webook that gets called following a recording that returns the URL of the recording and other meta data"
                },
                "event_method": {
                    "type": "string",
                    "default": "POST",
                    "description": "HTTP method that is used to make the request. Defaults to POST"
                },
                "backup_url": {
                    "type": "string",
                    "description": "Backup callback URL in case primary is unavailable"
                },
                "backup_method": {
                    "type": "string",
                    "default": "POST",
                    "description": "HTTP method that is used to make the request. Defaults to POST"
                },
                "beep_start": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether to beep when the recording starts. Options are ‘true’ or ‘false’. Defaults to false"
                },
                "beep_finish": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether to beep when the recording finishes. Options are ‘true’ or ‘false’. Defaults to false"
                },
                "public": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether to require credentials to access the file or public. Options are ‘true’ or ‘false’. Defaults to ‘false’"
                }
            },
            "required": [
                "event_url"
            ]
        },
        "participantResponse": {
            "type": "object",
            "properties": {
                "_links": {
                    "type": "object",
                    "properties": {
                        "call": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "call_uuid": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "call_status": {
                    "type": "string"
                },
                "vol": {
                    "type": "string"
                },
                "mute": {
                    "type": "string"
                },
                "earmuff": {
                    "type": "string"
                },
                "rate": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                }
            },
            "example": {
                "_links": {
                    "call": {
                        "href": "/calls/63f61863-4a51-4f6b-86e1-46edebcf9356"
                    },
                    "self": {
                        "href": "/conferences/13f61863-4a51-4f6b-86e1-46edebcf9356/participants/1"
                    }
                },
                "call_uuid": "63f61863-4a51-4f6b-86e1-46edebcf9356",
                "to": "447833726118",
                "from": "27312076887",
                "call_status": "in-progress",
                "vol": "0",
                "mute": "false",
                "earmuff": "false",
                "rate": "0.39",
                "price": "",
                "duration": "",
                "start_time": "2015-02-04T22:45:00Z",
                "end_time": "",
                "network": "65512"
            }
        },
        "ttsRequest": {
            "type": "object",
            "properties": {
                "loop": {
                    "type": "integer",
                    "default": 1,
                    "description": "Whether to loop the once the TTS ends. Options are an integer 0>=loop<10 where 0 loops continously. Defaults to 1",
                    "minimum": 0,
                    "maximum": 10
                },
                "text": {
                    "type": "string",
                    "description": "\nBody of the text message. 0>text<1500. Commas control pauses in speech.",
                    "minLength": 0,
                    "maxLength": 1500
                },
                "level": {
                    "type": "number",
                    "description": "Set the audio level of the TTS. -1>=level=<1. Defaults to 0",
                    "minimum": -1,
                    "maximum": 1,
                    "multipleOf": 0.1
                },
                "gender": {
                    "type": "string",
                    "default": "female",
                    "description": "The gender to use for TTS. Options are ‘male’ or ‘female’. Defaults to female",
                    "enum": [
                        "male",
                        "female"
                    ]
                },
                "language": {
                    "type": "string",
                    "default": "en-gb",
                    "description": "The language used to read the message. Defaults to \"en-gb\"  "
                }
            },
            "required": [
                "text"
            ]
        },
        "streamRequest": {
            "type": "object",
            "properties": {
                "stream_url": {
                    "type": "string",
                    "description": "A comma separated list of audio URLs to stream. "
                },
                "level": {
                    "type": "number",
                    "default": 0,
                    "description": "Set the audio level of the stream. -1>=level=<1. Defaults to 0. Resolution is 0.1",
                    "minimum": 1,
                    "maximum": -1,
                    "multipleOf": 0.1
                },
                "loop": {
                    "type": "integer",
                    "default": 1,
                    "description": "Whether to loop the stream once the stream ends. Options are an integer 0>=loop<10 where 0 loops continously. Defaults to 1. ",
                    "minimum": 0,
                    "maximum": 10
                }
            },
            "required": [
                "stream_url"
            ]
        },
        "common": {
            "type": "object",
            "properties": {
                "timestamp": {
                    "type": "string",
                    "description": "Timestamp of resource creation UTC"
                },
                "request_id": {
                    "type": "string",
                    "description": "The unique ID of the API request"
                },
                "status_code": {
                    "type": "string",
                    "description": "Unique Nexmo status code"
                },
                "description": {
                    "type": "string",
                    "description": "Human readable message"
                }
            }
        },
        "applicationRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Friendly name of application."
                },
                "numberpool_id": {
                    "type": "string",
                    "description": "ID of number pool connected to the application."
                },
                "answer_url": {
                    "type": "string",
                    "description": "URL that gets called once a call is answered. The URL returns a NCCO."
                },
                "answer_method": {
                    "type": "string",
                    "default": "POST",
                    "description": "HTTP method that is used to make the request. Defaults to POST."
                },
                "backup_url": {
                    "type": "string",
                    "description": "Backup event URL in case primary is unavailable."
                },
                "backup_method": {
                    "type": "string",
                    "default": "POST",
                    "description": "HTTP method that is used to make the request. Defaults to POST."
                },
                "event_url": {
                    "type": "string",
                    "description": "Asynchronous webhook that receives event information of a call."
                },
                "event_method": {
                    "type": "string",
                    "default": "POST",
                    "description": "HTTP method that is used to make the request. Defaults to POST."
                },
                "application_type": {
                    "type": "string",
                    "description": "Type of application.",
                    "enum": [
                        "voice"
                    ]
                }
            },
            "required": [
                "name",
                "answer_url",
                "event_url",
                "application_type"
            ],
            "example": {
                "name": "Nexmo-conference",
                "numberpool_id": "10",
                "answer_url": "http://myanswerurl.com",
                "answer_method": "GET",
                "backup_url": "http://mybackupurll.com",
                "backup_method": "GET",
                "event_url": "http://myeventurl.com",
                "event_method": "GET",
                "application_type": "voice"
            }
        },
        "whisperResponse": {
            "type": "object",
            "properties": {
                "_links": {
                    "type": "object",
                    "properties": {
                        "parent": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "self": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                }
                            }
                        },
                        "participants": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "href": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "conference_uuid": {
                    "type": "string"
                },
                "parent_conference_uuid": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "participants_count": {
                    "type": "string"
                }
            },
            "example": {
                "_links": {
                    "parent": {
                        "href": "/conferences/35f61863-4a51-4f6b-86e1-46edebcf93ad"
                    },
                    "self": {
                        "href": "/conferences/63f61863-4a51-4f6b-86e1-46edebcf9356"
                    },
                    "participants": [
                        {
                            "href": "/participants/63f61863-4a51-4f6b-86e1-46edebcf9356"
                        },
                        {
                            "href": "/participants/63f61863-4a51-4f6b-23e1-46edebcf9352"
                        },
                        {
                            "href": "/participants/43f61863-4a51-4f6b-12e1-46edebcf9312"
                        }
                    ]
                },
                "conference_uuid": "63f61863-4a51-4f6b-86e1-46edebcf9356",
                "parent_conference_uuid": "35f61863-4a51-4f6b-86e1-46edebcf93ad",
                "status": "in_progress",
                "start_time": "2015-02-04T22:45:00Z",
                "end_time": "",
                "participants_count": "3"
            }
        }
    }
}