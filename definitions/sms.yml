openapi: "3.0.0"
info:
  version: 1.0.0
  title: SMS API
  description: With the Nexmo SMS API you can send SMS from your account and lookup messages both messages that you've sent as well as messages sent to your virtual numbers.
servers:
  - url: https://rest.nexmo.com
paths:
  /sms/{format}:
    post:
      x-group: sms
      summary: Send an SMS
      description: Send an outbound SMS from your Nexmo account
      x-code-example-path: messaging.sms.send
      parameters:
        - name: format
          description: The format of the response
          in: path
          required: true
          schema:
            example: json
            type: string
            enum:
              - json
              - xml
            default: json
        - name: api_key
          description: Your API key
          required: true
          in: query
          example: abcd1234
          schema:
            type: string
            minLength: 8
            maxLength: 8
        - name: api_secret
          description: Your API secret. Required unless `sig` is provided
          required: false
          in: query
          example: abcdef0123456789
          schema:
            type: string
            minLength: 16
            maxLength: 16
        - name: sig
          description: The hash of the request parameters in alphabetical order, a timestamp and the signature secret. See [Signing Requests](/concepts/guides/signing-messages) for more details.
          required: false
          in: query
          schema:
            type: string
            minLength: 16
            maxLength: 16
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NewMessage'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
      callbacks:
        delivery-receipt:
          '{$request.body#/callback}':
            post:
              summary: Delivery Receipt
              description: The following are parameters sent in as a [delivery receipt](/messaging/sms/guides/delivery-receipts) callback. You can subscribe to [webhooks](/concepts/guides/webhooks) to receive notification when the delivery status of an SMS that you have sent with Nexmo changes.
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/DeliveryReceipt'
              responses:
                '200':
                  description: Your server returns this code if it accepts the callback

components:
  schemas:
    NewMessage:
      required:
        - from
        - to
      properties:
        from:
          description: The name or number the message should be sent from. Alphanumeric senderID's are not supported in all countries, see [Global Messaging](/messaging/sms/guides/global-messaging#country-specific-features) for more details.
          type: string
          example: 'Acme Inc'
        to:
          description: The number that the message should be sent to
          type: string
          minLength: 11
          maxLength: 12
          pattern: '\d{11,12}'
          example: 447700900000
        text:
          description: The body of the message being sent
          type: string
          example: Hello World!
        ttl:
          description: '**Advanced**: The duration in milliseconds the delivery of an SMS will be attempted.§§ By default Nexmo attempt delivery for 72 hours, however the maximum effective value depends on the operator and is typically 24 - 48 hours. We recommend this value should be kept at its default or at least 30 minutes.'
          type: integer
          example: 900000
          default: 259200000
          minimum: 20000
          maximum: 604800000
        status-report-req:
          description: '**Advanced**: Boolean indicating if you like to receive a [Delivery Receipt](/messaging/sms/building-blocks/receive-a-delivery-receipt).'
          type: boolean
          example: 'false'
          default: 'true'
        callback:
          description: '**Advanced**: The webhook endpoint the delivery receipt for this sms is sent to. This parameter overrides the webhook endpoint you set in Dashboard.'
          type: string
          example: 'https://example.com/sms-dlr'
        message-class:
          description: '**Advanced**: The Data Coding Scheme value of the message'
          type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
        type:
          description: '**Advanced**: The format of the message body'
          type: string
          enum:
            - text
            - binary
            - wappush
            - unicode
            - vcal
            - vard
          example: text
          default: text
        vcard:
          description: '**Advanced**: A business card in [vCard format](https://en.wikipedia.org/wiki/VCard). Depends on `type` parameter having the value `vcard`.'
          type: string
          format: vcard
        vcal:
          description: '**Advanced**: A calendar event in [vCal format](https://en.wikipedia.org/wiki/VCal). Depends on `type` parameter having the value `vcal`.'
          type: string
          format: vcal
        body:
          description: '**Advanced**: Hex encoded binary data. Depends on `type` parameter having the value `binary`.'
          type: string
          example: 0011223344556677
        udh:
          description: '**Advanced**: Your custom Hex encoded [User Data Header](https://en.wikipedia.org/wiki/User_Data_Header). Depends on `type` parameter having the value `binary`.'
          type: string
          example: 06050415811581
        protocol-id:
          description: '**Advanced**: The value of the [protocol identifier](https://en.wikipedia.org/wiki/GSM_03.40#Protocol_Identifier) to use. Ensure that the value is aligned with `udh`.'
          type: integer
          example: 127
        title:
          description: '**Advanced**: The title for a wappush SMS. Depends on `type` parameter having the value `wappush`.'
          type: string
          example: Welcome
        url:
          description: '**Advanced**: The URL of your website. Depends on `type` parameter having the value `wappush`.'
          type: string
          example: https://example.com
        validity:
          description: '**Advanced**: The availability for an SMS in milliseconds. Depends on `type` parameter having the value `wappush`.'
          type: string
          example: https://example.com
    Error:
      type: object
      properties:
        message-count:
          type: integer
          description: The amount of messages in the request
          example: 1
        messages:
          type: array
          items:
            $ref: '#/components/schemas/ErrorMessage'
    ErrorMessage:
      type: object
      properties:
        status:
          type: string
          description: The error status of the message
          example: '2'
        error-text:
          type: string
          description: The description of the error
          example: 'Missing to param'
    SMS:
      type: object
      properties:
        message-count:
          type: integer
          description: The amount of messages in the request
          example: 1
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
    Message:
      type: object
      properties:
        to:
          type: string
          description: The number the message was sent to
          example: '447700900000'
        message-id:
          type: string
          description: The ID of the message
          example: 0A0000000123ABCD1
        status:
          type: string
          description: The status of the message
          example: '0'
        remaining-balance:
          type: string
          description: Your remaining balance
          example: '3.14159265'
        message-price:
          type: string
          description: The cost of the message
          example: '0.03330000'
        network:
          type: string
          description: The ID of the network of the recipient
          example: '12345'
    DeliveryReceipt:
      type: object
      properties:
        msisdn:
          type: string
          description: The number the message was sent to
          example: '447700900000'
        to:
          type: string
          description: The SenderID you set in from in your request
          example: Acme Inc
        network-code:
          type: string
          description: The Mobile Country Code Mobile Network Code (MCCMNC) of the carrier this phone number is registered with.
          example: '12345'
        messageId:
          type: string
          description: The Nexmo ID for this message.
          example: '0A0000001234567B'
        price:
          type: string
          description: The cost of the message
          example: '0.03330000'
        status:
          type: string
          description: A code that explains where the message is in the delivery process.
          example: 'delivered'
          x-possible-values:
            - delivered
            - expired
            - failed
            - rejected
            - accepted
            - buffered
            - unknown
        scts:
          type: string
          description: When the DLR was recieved from the carrier in the following format `YYMMDDHHMM`. For example, `2001011400` is at `2020-01-01 14:00`
          example: 2001011400
        err-code:
          type: string
          description: |
            The status of the request. Will be a non `0` value if there has been an error.

            Code | Description
            -- | --
            `0` | Delivered.
            `1` | ^[Unknown](Either: An unknown error was received from the carrier who tried to send this this message. Depending on the carrier, that to is unknown. When you see this error, and status is rejected, always check if to in your request was valid.)
            `2` | ^[Absent Subscriber Temporary](This message was not delivered because to was temporarily unavailable. For example, the handset used for to was out of coverage or switched off. This is a temporary failure, retry later for a positive result.)
            `3` | ^[Absent Subscriber Permanent](To is no longer active, you should remove this phone number from your database.)
            `4` | ^[Call barred by user](You should remove this phone number from your database. If the user wants to receive messages from you, they need to contact their carrier directly.)
            `5` | ^[Portability Error](There is an issue after the user has changed carrier for to. If the user wants to receive messages from you, they need to contact their carrier directly.)
            `6` | ^[Anti-Spam Rejection](Carriers often apply restrictions that block messages following different criteria. For example, on SenderID or message content.)
            `7` | ^[Handset Busy](The handset associated with to was not available when this message was sent. If status is Failed, this is a temporary failure; retry later for a positive result. If status is Accepted, this message has is in the retry scheme and will be resent until it expires in 24-48 hours.)
            `8` | ^[Network Error](A network failure while sending your message. This is a temporary failure, retry later for a positive result.)
            `9` | ^[Illegal Number](You tried to send a message to a blacklisted phone number. That is, the user has already sent a STOP opt-out message and no longer wishes to receive messages from you.)
            `10` | ^[Invalid Message](The message could not be sent because one of the parameters in the message was incorrect. For example, incorrect type or udh.)
            `11` | ^[Unroutable](The chosen route to send your message is not available. This is because the phone number is either currently on an unsupported network or on a pre-paid or reseller account that could not receive a message sent by from. To resolve this issue either email us at support@nexmo.com or create a helpdesk ticket at https://help.nexmo.com.)
            `12` | ^[Destination unreachable](The message could not be delivered to the phone number.)
            `13` | ^[Subscriber Age Restriction](The carrier blocked this message because the content is not suitable for to based on age restrictions.)
            `14` | ^[Number Blocked by Carrier](The carrier blocked this message. This could be due to several reasons. For example, to's plan does not include SMS or the account is suspended.)
            `15` | ^[Pre-Paid](Insufficent funds. To’s pre-paid account does not have enough credit to receive the message.)
            `99` | ^[General Error](There is a problem with the chosen route to send your message. To resolve this issue either email us at support@nexmo.com or create a helpdesk ticket at https://help.nexmo.com.)

          example: '0'
        message-timestamp:
          description: The time when Nexmo started to push this Delivery Receipt to your webhook endpoint.
          type: string
          example: 2020-01-01 12:00:00
x-groups:
  sms:
    name: "SMS"
    order: 1
    description: The SMS object contains information about the request and details of the message information.
    schema:
      $ref: '#/components/schemas/SMS'
