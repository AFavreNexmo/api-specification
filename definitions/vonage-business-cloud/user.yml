---
openapi: 3.0.0
info:
  version: 1.10.1
  title: User API
  description: Retrieve information about users.
  contact:
    name: "User API"
    url: "https://businesssupport.vonage.com/contactus"
  license:
    name: "Vonage"
    url: "https://www.vonage.com/business/legal-policy-center/business-cloud/tos"

servers:
- url: "https://api.vonage.com"
paths:

  "/api/accounts/{account_id}/users":
    get:
      operationId: UserCtrl.getUsers
      parameters:
        - $ref: '#/components/parameters/AccountID'
        - in: query
          name: page_size
          required: false
          schema:
            type: number
          description: Page size for pagination
        - in: query
          name: cursor
          required: false
          schema:
            type: number
          description: Cursor for pagination
        - in: query
          name: order
          required: false
          schema:
            type: string
          description: ASC or DESC
        - in: query
          name: first_name
          required: false
          schema:
            type: string
          description: filter by first name
        - in: query
          name: last_name
          required: false
          schema:
            type: string
          description: filter by last name
        - in: query
          name: login_name
          required: false
          schema:
            type: string
          description: filter by login name
        - in: query
          name: email
          required: false
          schema:
            type: string
          description: filter by email address
      responses:
        "200":
          description: Success
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/UsersHalResponse"
      security:
        - bearerAuth: []
      summary: Get account users data by account ID

  "/api/accounts/{account_id}/users/{user_id}":
    get:
      operationId: UserCtrl.getUserByID
      parameters:
        - $ref: '#/components/parameters/AccountID'
        - in: path
          name: user_id
          required: true
          schema:
            type: number
          description: The ID of the user
      responses:
        "200":
          description: Success
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/UserHalResponse"
        "404":
          description: User not found
      security:
        - bearerAuth: []
      summary: Get user data by account ID and user ID
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: OAuth

  parameters:
    AccountID:
      in: path
      name: account_id
      required: true
      schema:
        type: string
      description: The account ID

  schemas:
    Href:
      properties:
        href:
          type: string
      type: object

    Links:
      properties:
        first:
          $ref: "#/components/schemas/Href"
        prev:
          $ref: "#/components/schemas/Href"
        self:
          $ref: "#/components/schemas/Href"
        next:
          $ref: "#/components/schemas/Href"
      type: object

    Contact:
      properties:
        type:
          type: string
        value:
          type: string
      type: object

    UserExtension:
      properties:
        dids:
          items:
            type: string
          type: array
        extension_number:
          type: string
      type: object

    User:
      properties:
        email:
          type: string
        login_name:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        id:
          type: number
        contact_numbers:
          items:
            $ref: "#/components/schemas/Contact"
          type: array
        extensions:
          items:
            $ref: "#/components/schemas/UserExtension"
          type: array
      type: object

    UsersEmbeddedObject:
      properties:
        data:
          items:
            $ref: "#/components/schemas/User"
          type: array
      type: object

    UserEmbeddedObject:
      properties:
        data:
          $ref: "#/components/schemas/User"
      type: object

    UserHalResponse:
      properties:
        page_size:
          type: number
        cursor:
          type: number
        _links:
          $ref: "#/components/schemas/Links"
        _embedded:
          $ref: "#/components/schemas/UserEmbeddedObject"
      type: object

    UsersHalResponse:
      properties:
        page_size:
          type: number
        cursor:
          type: number
        _links:
          $ref: "#/components/schemas/Links"
        _embedded:
          $ref: "#/components/schemas/UsersEmbeddedObject"
      type: object
