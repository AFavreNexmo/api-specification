swagger: '2.0'
info:
  version: '1'
  title: "Nexmo Conversation API"
securityDefinitions:
  $ref: ../api-spec.yaml#/securityDefinitions

paths:
  /conversations:
    get:
      produces:
      - application/json
      description: Gets a filtered list of Conversation objects
      parameters:
        - name: name
          in: query
          type: string
          required: false
        - name: user_uuid
          in: query
          description: Restrict to conversations this user is a memebr of
          type: string
          required: false
      responses:
        '200':
          description: A list of conversations
          schema:
            type: array
            items:
              $ref: '#/definitions/conversation_lite'
    post:
      produces:
      - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/conversation'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/conversation_lite'

  /conversations/{conversation_id}:
    get:
      produces:
      - application/json
      description: Gets a specific conversation
      parameters:
        - name: conversation_id
          in: path
          description: Conversation ID
          type: string
          required: true
      responses:
        '200':
          description: A conversation
          schema:
            $ref: '#/definitions/conversation'
    put:
      produces:
      - application/json
      description: Udpate a specific conversation
      parameters:
        - name: conversation_id
          in: path
          description: Conversation ID
          type: string
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/conversation'
      responses:
        '200':
          description: An updated conversation
          schema:
            $ref: '#/definitions/conversation'
    delete:
      produces:
      - application/json
      parameters:
        - name: conversation_id
          in: path
          description: Conversation ID
          type: string
          required: true
      responses:
        '200':
          description: Success

  /conversations/{conversation_id}/members:
    post:
      produces:
      - application/json
      parameters:
        - name: conversation_id
          in: path
          description: Conversation ID
          required: true
          type: string
        - name: action
          in: query
          required: true
          type: string
          enum: [invite, join]
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/member'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/member_lite'
    get:
      produces:
      - application/json
      description: Gets a filtered list of Member objecs
      parameters:
        - name: conversation_id
          in: path
          description: Conversation ID
          required: true
          type: string
        - name: state
          in: query
          description: The member state
          required: false
          type: string
          enum: [knocking, invited, joined, left]
        - name: channel
          in: query
          description: The channel type (pstn, app, sms)
          required: false
          type: string
        - name: count
          in: query
          description: Only return the record count
          required: false
          type: integer
        - name: page_size
          in: query
          description: The number of records to limit the response to
          required: false
          type: integer
        - name: cursor
          in: query
          description: The last id in the previous page
          required: false
          type: string
      responses:
        '200':
          description: A list of members
          schema:
            type: array
            items:
              $ref: '#/definitions/member_lite'

  /conversations/{conversation_id}/members/{member_id}:
    get:
      produces:
      - application/json
      description: Gets a specfic member
      parameters:
        - name: conversation_id
          in: path
          description: Conversation ID
          required: true
          type: string
        - name: member_id
          in: path
          description: Member ID
          required: true
          type: string
      responses:
        '200':
          description: A member
          schema:
            $ref: '#/definitions/member'
    put:
      produces:
      - application/json
      parameters:
        - name: conversation_id
          in: path
          description: Conversation ID
          required: true
          type: string
        - name: member_id
          in: path
          description: Member ID
          required: true
          type: string
        - name: action
          in: query
          required: true
          type: string
          enum: [join]
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/member'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/member_lite'
    delete:
      produces:
      - application/json
      parameters:
        - name: conversation_id
          in: path
          description: Conversation ID
          type: string
          required: true
        - name: member_id
          in: path
          description: Member ID
          required: true
          type: string
      responses:
        '200':
          description: Success

  /conversations/{conversation_id}/events:
    post:
      produces:
      - application/json
      parameters:
        - name: conversation_id
          in: path
          description: Conversation ID
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/event'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/event_lite'
    get:
      produces:
      - application/json
      description: Gets a filtered list of Event objecs
      parameters:
        - name: conversation_id
          in: path
          description: Conversation ID
          required: true
          type: string
        - name: start_id
          in: query
          description: Starting event id
          required: false
          type: integer
        - name: end_id
          in: query
          description: Ending event id
          required: false
          type: integer
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/event'

  /conversations/{conversation_id}/events/{event_id}:
    get:
      produces:
      - application/json
      description: Gets a specfic event
      parameters:
        - name: conversation_id
          in: path
          description: Conversation ID
          required: true
          type: string
        - name: event_id
          in: path
          description: Event ID
          required: true
          type: string
      responses:
        '200':
          description: An event
          schema:
            $ref: '#/definitions/event'
    delete:
      produces:
      - application/json
      parameters:
        - name: conversation_id
          in: path
          description: Conversation ID
          type: string
          required: true
        - name: event_id
          in: path
          description: Event ID
          required: true
          type: string
      responses:
        '200':
          description: Success

definitions:
  event_lite:
    type: object
    properties:
      id:
        type: integer
      type:
        type: string

  event:
    allOf:
    - $ref: '#/definitions/event_lite'
    - type: object
      properties:
        from:
          type: string
        to:
          type: string
        body:
          type: object
        timestamp:
          type: object
          description: ISO-8601 dates
          properties:
            created:
              type: string
              format: date-time
            deleted:
              type: string
              format: date-time

  conversation_lite:
    type: object
    properties:
      uuid:
        type: string
      name:
        type: string
      sequence_number:
        description: The last event id in this conversation
        type: integer
      self_uuid:
        description: The member id of the requesting user (if any)

  conversation:
    allOf:
    - $ref: '#/definitions/conversation_lite'
    - type: object
      properties:
        display_name:
          type: string
        image_url:
          type: string
        properties:
          type: object
          description: Settings for the conversation
          properties:
            speaking_detection_level:
              type: string
        members:
          type: array
          items:
            $ref: '#/definitions/member_lite'
        timestamp:
          type: object
          description: ISO-8601 dates
          properties:
            created:
              type: string
              format: date-time
            deleted:
              type: string
              format: date-time

  member_lite:
    type: object
    properties:
      uuid:
        type: string
        description: Member ID
      state:
        type: string
        description: State
        enum: [knocking, invited, joined, left]

  member:
    allOf:
    - $ref: '#/definitions/member_lite'
    - type: object
      properties:
        timestamp:
          type: object
          description: ISO-8601 dates
          properties:
            created:
              type: string
              format: date-time
            knocked:
              type: string
              format: date-time
            invited:
              type: string
              format: date-time
            joined:
              type: string
              format: date-time
            left:
              type: string
              format: date-time
        user:
          $ref: '../users/api-spec.yaml#/definitions/user_lite'
        channel:
          type: object
          properties:
            app:
              type: object
            pstn:
              type: object
              properties:
                id:
                  type: string
                  description: The Call ID
                from:
                  type: string
                to:
                  type: string
                direction:
                  type: string
                  description: Direction of call, outbound is from the conversation
                  enum: [inbound, outbound]
                network:
                  type: string
                rate:
                  type: string
                price:
                  type: string
                  description: Only available for a member in left state
            sip:
              type: object
            sms:
              type: object
        media:
          type: object
          properties:
            text:
              type: object
            audio:
              type: object
            video:
              type: object